name: Interchaintest

on:
  pull_request:

env:
  GO_VERSION: "1.23.5"
  TAR_PATH: /tmp/seda-docker-image.tar
  IMAGE_NAME: sedad-e2e

permissions:
  contents: read
  repository-projects: read
  packages: read

concurrency:
  group: ci-${{ github.ref }}-interchaintest
  cancel-in-progress: true

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: interchaintest/go.sum

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./dockerfiles/Dockerfile.e2e
          tags: sedad-e2e
          outputs: type=docker,dest=${{ env.TAR_PATH }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}
          path: ${{ env.TAR_PATH }}

  interchaintest:
    needs: build-docker-image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test:
          - "ictest-sdk-commands"
          - "ictest-sdk-boundaries"
          - "ictest-chain-start"
          - "ictest-state-sync"
          - "ictest-ibc-xfer"
          - "ictest-packet-forward-middleware"
          - "ictest-ibc-ica"
      fail-fast: false

    steps:
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: interchaintest/go.sum

      - name: checkout chain
        uses: actions/checkout@v5

      - name: Download Tarball Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}
          path: /tmp

      - name: Load Docker Image
        run: |
          docker image load -i ${{ env.TAR_PATH }}
          docker image ls -a

      - name: Run Test
        run: make ${{ matrix.test }}
