ARG GO_VERSION="1.23.5"

# --------------------------------------------------------
# Builder
# --------------------------------------------------------

FROM golang:${GO_VERSION}-alpine as builder

ARG GIT_VERSION
ARG GIT_COMMIT
ENV CGO_ENABLED=1

RUN apk add --no-cache \
    ca-certificates \
    build-base \
    linux-headers \
    binutils-gold

# Download go dependencies
WORKDIR /seda-chain
COPY . .
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/root/go/pkg/mod \
    go mod download

# Cosmwasm - Download correct libwasmvm_muslc version for amd64
RUN ARCH=x86_64 && WASMVM_VERSION=$(go list -m github.com/CosmWasm/wasmvm/v2 | sed 's/.* //') && \
    wget https://github.com/CosmWasm/wasmvm/releases/download/$WASMVM_VERSION/libwasmvm_muslc.$ARCH.a \
        -O /lib/libwasmvm_muslc.$ARCH.a && \
    # verify checksum
    wget https://github.com/CosmWasm/wasmvm/releases/download/$WASMVM_VERSION/checksums.txt -O /tmp/checksums.txt && \
    sha256sum /lib/libwasmvm_muslc.$ARCH.a | grep $(cat /tmp/checksums.txt | grep libwasmvm_muslc.$ARCH | cut -d ' ' -f 1)

# Download SEDA Wasm VM static library for amd64
RUN ARCH=x86_64 && TALLYVM_VERSION=$(go list -m github.com/sedaprotocol/seda-wasm-vm/tallyvm/v2 | sed 's/.* //') && \
    wget https://github.com/sedaprotocol/seda-wasm-vm/releases/download/tallyvm%2F$TALLYVM_VERSION/libseda_tally_vm_muslc.$ARCH.a \
        -O /lib/libseda_tally_vm_muslc.$ARCH.a

# Build sedad binary for amd64
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/root/go/pkg/mod \
    GOWORK=off go build \
        -mod=readonly \
        -tags "netgo,ledger,muslc" \
        -ldflags \
            "-X github.com/cosmos/cosmos-sdk/version.Name="seda-chain" \
            -X github.com/cosmos/cosmos-sdk/version.AppName="sedad" \
            -X github.com/cosmos/cosmos-sdk/version.Version=${GIT_VERSION} \
            -X github.com/cosmos/cosmos-sdk/version.Commit=${GIT_COMMIT} \
            -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger,muslc \
            -w -s -linkmode=external -extldflags '-Wl,-z,muldefs -static'" \
        -trimpath \
        -o /seda-chain/build/sedad-amd64 \
        /seda-chain/cmd/sedad/main.go

# Cosmwasm - Download correct libwasmvm_muslc version for aarch64
RUN ARCH=aarch64 && WASMVM_VERSION=$(go list -m github.com/CosmWasm/wasmvm/v2 | sed 's/.* //') && \
    wget https://github.com/CosmWasm/wasmvm/releases/download/$WASMVM_VERSION/libwasmvm_muslc.$ARCH.a \
        -O /lib/libwasmvm_muslc.$ARCH.a && \
    # verify checksum
    wget https://github.com/CosmWasm/wasmvm/releases/download/$WASMVM_VERSION/checksums.txt -O /tmp/checksums.txt && \
    sha256sum /lib/libwasmvm_muslc.$ARCH.a | grep $(cat /tmp/checksums.txt | grep libwasmvm_muslc.$ARCH | cut -d ' ' -f 1)

# Download SEDA Wasm VM static library for aarch64
RUN ARCH=aarch64 && TALLYVM_VERSION=$(go list -m github.com/sedaprotocol/seda-wasm-vm/tallyvm/v2 | sed 's/.* //') && \
    wget https://github.com/sedaprotocol/seda-wasm-vm/releases/download/tallyvm%2F$TALLYVM_VERSION/libseda_tally_vm_muslc.$ARCH.a \
        -O /lib/libseda_tally_vm_muslc.a

# RUN wget https://musl.cc/aarch64-linux-musl-cross.tgz && \
RUN wget -O aarch64-linux-musl-cross.tgz https://aarch64-linux-musl-cross.s3.eu-west-2.amazonaws.com/aarch64-linux-musl-cross.tgz && \
    mkdir -p /aarch64-tools && \
    tar -xvf aarch64-linux-musl-cross.tgz -C /aarch64-tools --strip-components=1

ENV GOARCH=arm64
ENV CC=/aarch64-tools/bin/aarch64-linux-musl-gcc
ENV CXX=/aarch64-tools/bin/aarch64-linux-musl-g++

# Build sedad binary for arm64
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/root/go/pkg/mod \
    GOWORK=off CGO_LDFLAGS="-L/lib" go build \
        -mod=readonly \
        -tags "netgo,ledger,muslc" \
        -ldflags \
            "-X github.com/cosmos/cosmos-sdk/version.Name="seda-chain" \
            -X github.com/cosmos/cosmos-sdk/version.AppName="sedad" \
            -X github.com/cosmos/cosmos-sdk/version.Version=${GIT_VERSION} \
            -X github.com/cosmos/cosmos-sdk/version.Commit=${GIT_COMMIT} \
            -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger,muslc \
            -w -s -linkmode=external -extldflags '-Wl,-z,muldefs -static'" \
        -trimpath \
        -o /seda-chain/build/sedad-arm64 \
        /seda-chain/cmd/sedad/main.go

# --------------------------------------------------------
# Output
# --------------------------------------------------------
FROM alpine
COPY --from=builder /seda-chain/build/sedad-amd64 /build/sedad-amd64
COPY --from=builder /seda-chain/build/sedad-arm64 /build/sedad-arm64
