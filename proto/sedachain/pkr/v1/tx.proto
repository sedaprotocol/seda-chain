syntax = "proto3";
package sedachain.pkr.v1;

import "google/protobuf/any.proto";

import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/sedaprotocol/seda-chain/x/pkr/types";

// Msg defines the pkr Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // AddKey defines a method for registering a new public key.
  rpc AddKey(MsgAddKey)
      returns (MsgAddKeyResponse);
}

// MsgAddKey defines a message for registering a new public key.
message MsgAddKey {
  option (cosmos.msg.v1.signer) = "validator_address";

  string validator_address = 1 [(cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  uint32 index = 2;
  google.protobuf.Any pubkey = 3 [ (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey" ];
}

// MsgAddKeyResponse defines the Msg/MsgAddKey response type.
message MsgAddKeyResponse {}
