syntax = "proto3";
package sedachain.wasm_storage;

import "google/api/annotations.proto";
import "sedachain/wasm_storage/wasm_storage.proto";

option go_package = "github.com/sedaprotocol/seda-chain/x/wasm-storage/types";

// Query defines the gRPC querier service.
service Query {
  // DataRequestWasm returns Data Request Wasm given its hash.
  rpc DataRequestWasm(QueryDataRequestWasmRequest)
      returns (QueryDataRequestWasmResponse) {
    option (google.api.http).get =
        "/seda-chain/wasm-storage/data_request_wasm/{hash}";
  }

  rpc DataRequestWasms(QueryDataRequestWasmsRequest)
      returns (QueryDataRequestWasmsResponse) {
    option (google.api.http).get =
        "/seda-chain/wasm-storage/data_request_wasms";
  }

  // OverlayWasm returns Overlay Wasm given its hash.
  rpc OverlayWasm(QueryOverlayWasmRequest) returns (QueryOverlayWasmResponse) {
    option (google.api.http).get =
        "/seda-chain/wasm-storage/overlay_wasm/{hash}";
  }

  rpc OverlayWasms(QueryOverlayWasmsRequest)
      returns (QueryOverlayWasmsResponse) {
    option (google.api.http).get = "/seda-chain/wasm-storage/overlay_wasms";
  }
}

message QueryDataRequestWasmRequest { string hash = 1; }

message QueryDataRequestWasmResponse { Wasm wasm = 1; }

message QueryDataRequestWasmsRequest {}

message QueryDataRequestWasmsResponse { repeated string hash_type_pairs = 1; }

message QueryOverlayWasmRequest { string hash = 1; }

message QueryOverlayWasmResponse { Wasm wasm = 1; }

message QueryOverlayWasmsRequest {}

message QueryOverlayWasmsResponse { repeated string hash_type_pairs = 1; }
