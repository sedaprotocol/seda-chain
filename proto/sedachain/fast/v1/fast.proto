syntax = "proto3";
package sedachain.fast.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/sedaprotocol/seda-chain/x/fast/types";

// Module parameters which can be changed through the authority.
message Params { option (gogoproto.equal) = true; }

// FastClient contains information about a fast client.
message FastClient {
  // The unique identifier of the fast client. Only used for internal purposes
  // to allow key rotation.
  uint64 id = 1;

  // This address is allowed to update the config of the fast client.
  string owner_address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // This address is allowed to perform administrative actions on the fast
  // client.
  string admin_address = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The address of the fast client that's used to submit reports.
  string address = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The public key of the fast client used to verify signed requests and
  // identify the fast client.
  bytes public_key = 5;

  // The memo of the fast client.
  string memo = 6;

  // The balance of the fast client.
  string balance = 7 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  // The user credits a fast client has used but not yet settled with the
  // balance.
  string used_credits = 8 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// A user of a fast client.
message FastUser {
  // The identifier of the user, should be unique for a fast client.
  string user_id = 1;

  // The amount of credits the user has.
  string credits = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// A report of a user's usage of the fast.
message FastUserReport {
  // The identifier of the user.
  string user_id = 1;

  // The amount of credits the user has used. Includes the computation credits
  // AND the data proxy credits.
  string used_credits = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  // The reports of the data proxy queries made for the user.
  repeated DataProxyReport data_proxy_reports = 3;

  // The number of queries made for the user.
  uint64 queries = 4;
}

// A report of a user's usage of a data proxy.
message DataProxyReport {
  // The public key of the data proxy as a hex string.
  string data_proxy_pub_key = 1;

  // The price of the data proxy in aseda when the query was made.
  string price = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  // The amount of data proxy queries for the data proxy/price pair.
  uint64 amount = 3;
}
