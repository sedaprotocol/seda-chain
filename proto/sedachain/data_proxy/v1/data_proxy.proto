syntax = "proto3";
package sedachain.data_proxy.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/sedaprotocol/seda-chain/x/data-proxy/types";

// Module parameters which can be changed through governance.
message Params {
  option (gogoproto.equal) = true;

  // min_fee_update_delay is the minimum number of blocks after which a fee
  // update comes into effect.
  uint32 min_fee_update_delay = 1;
}

// ProxyConfig defines a data-proxy entry in the registry.
message ProxyConfig {
  // payout_address defines the address to which the data proxy fees should be
  // transferred.
  string payout_address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // fee defines the amount in aseda this data-proxy charges when utilised.
  cosmos.base.v1beta1.Coin fee = 2;

  // memo defines an optional string which is not used by the protocol.
  string memo = 3;

  // only the admin address of a data proxy can submit config updates.
  string admin_address = 4;

  // fee_update defines an upcoming fee change which will take effect at a
  // future height.
  FeeUpdate fee_update = 5;
}

// FeeUpdate defines a new fee amount and the height at which it will take
// effect.
message FeeUpdate {
  // new_fee defines the new fee for the data proxy.
  cosmos.base.v1beta1.Coin new_fee = 1;

  // update_height defines the height after which the new fee comes into effect.
  int64 update_height = 2;
}