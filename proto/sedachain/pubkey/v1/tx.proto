syntax = "proto3";
package sedachain.pubkey.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "sedachain/pubkey/v1/pubkey.proto";

option go_package = "github.com/sedaprotocol/seda-chain/x/pubkey/types";

// Msg defines the pubkey Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // AddKey defines a method for registering a new public key.
  rpc AddKey(MsgAddKey)
      returns (MsgAddKeyResponse);
}

// MsgAddKey defines a message for registering a new public key.
message MsgAddKey {
  option (cosmos.msg.v1.signer) = "validator_addr";

  string validator_addr = 1 [(cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  repeated IndexedPubKey indexed_pub_keys = 2 [(gogoproto.nullable) = false];
}

// MsgAddKeyResponse defines the Msg/MsgAddKey response type.
message MsgAddKeyResponse {}
